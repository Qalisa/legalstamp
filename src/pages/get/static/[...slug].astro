---
import { render } from "astro:content";
import { getEntry } from "astro:content";
import { availableFormatsConfig, defaultDocFormatConfig, productOrOrgFirst } from "helpers/legalstamp.groupedBy";
import { generateStaticPaths } from "helpers/static";
import LeanLayout from "layouts/LeanLayout.astro";
import { getMarkdownPage } from "../dynamic/[documentType]/[productOrOrganization]/[lang]/[tag]/markdown";

export async function getStaticPaths() {
    return generateStaticPaths(productOrOrgFirst.grouping, { onlyTags: true, squeezeTagParam: false })
}

const { documentType, format, lang, productOrOrganization, tag } = Astro.props;

//
const entry = await getEntry('legalstamped', [documentType, productOrOrganization, lang, tag].join('/'))
if (!entry) {
  throw new Error('Could not find document');
} else if (entry.rendered?.html == '') {
    throw new Error('Document exist, but is empty');
}

//
const defaultedFormat = format ?? defaultDocFormatConfig.name

const { Content, headings } = await render(entry);
---
<LeanLayout isEnhanced={defaultedFormat == 'enhanced'} title={headings[0].text}>
    <Content />
    <Fragment slot="links">
        {[
            getMarkdownPage(), 
            ["HTML 🌏", availableFormatsConfig.html.name]
        ].map(([linkName, format])=>         
            (<a class="fixup" href={"./#|" + format}>{linkName}</a>)
          )
        }
    </Fragment>
    <Fragment slot="back">
        <a class="back fixup" href="./#-">{"<"} Back</a>
    </Fragment>
</LeanLayout>
<style>
    .back {
		position:absolute;
		padding-left: 1rem;
		padding-top: .25rem;
		font-size: .75rem;
	}
</style>
