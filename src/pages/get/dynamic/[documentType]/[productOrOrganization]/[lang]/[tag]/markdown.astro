---
import { getEntry } from "astro:content";
import { availableFormatsConfig } from "helpers/legalstamp.groupedBy";

export const prerender = false

//
const allowedOrigins = (import.meta.env.CORS_ALLOW_ORIGIN ?? '').split(',').filter(Boolean).map(domain => "https://" + domain);

const { documentType, lang, productOrOrganization, tag } = Astro.params;

//
const slug = [documentType, productOrOrganization, lang, tag].join('/')
const entry = await getEntry('legalstamped', slug)
if (!entry) {
  throw new Error('Could not find document');
} else if (entry.rendered?.html == '') {
    throw new Error('Document exist, but is empty');
}

//
const requester = Astro.request.headers.get('Origin') ?? ''
const isCORSRequest = requester != ''
const isRequesterWhitelisted = allowedOrigins.includes(requester)
const OK = !isCORSRequest || isRequesterWhitelisted

//
return new Response(
    OK 
        ? entry.body 
        : "Requester not whitelisted. Should be either " + allowedOrigins.join(''), 
    {
        headers: {
            "Access-Control-Allow-Headers": "Content-Type",
            "Access-Control-Allow-Methods": "GET, OPTIONS",
            "Access-Control-Allow-Origin": isRequesterWhitelisted ? requester : 'null',
            "Content-Type": availableFormatsConfig['markdown'].contentType,
        },
        status: OK ? 200 : 401
    }
)
---