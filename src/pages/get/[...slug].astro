---
import { render } from "astro:content";
import { getEntry } from "astro:content";
import { availableFormatsConfig, defaultDocFormat, productOrOrgFirst } from "helpers/legalstamp.groupedBy";
import { generateStaticPaths } from "helpers/static";
import LeanLayout from "layouts/LeanLayout.astro";

export async function getStaticPaths() {
    return generateStaticPaths(productOrOrgFirst.grouping, { onlyTags: true, squeezeTagParam: false })
}

const { documentType, format, lang, productOrOrganization, tag } = Astro.props;

//
const entry = await getEntry('legalstamped', [documentType, productOrOrganization, lang, tag].join('/'))
if (!entry) {
  throw new Error('Could not find document');
} else if (entry.rendered?.html == '') {
    throw new Error('Document exist, but is empty');
}

//
const defaultedFormat = format ?? defaultDocFormat
switch (defaultedFormat) {
    //
    case "markdown": {
        const allowedOrigin = import.meta.env.CORS_ALLOW_ORIGIN;
        return new Response(entry.body, {
            headers: {
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "GET, OPTIONS",
                "Access-Control-Allow-Origin": allowedOrigin,
                "Content-Type": availableFormatsConfig[defaultedFormat].contentType,
            }
        })
    }

    // classic rendering
    default: {}
}

const { Content } = await render(entry);
---
<LeanLayout isEnhanced={defaultedFormat == 'enhanced'}>
    <Content />
</LeanLayout>